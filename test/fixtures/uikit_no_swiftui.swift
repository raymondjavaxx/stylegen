//
//  uikit_no_swiftui.swift
//
//  Generated by Stylegen. Do not modify.
//

import UIKit

final class BaseColor {
    typealias NativeColor = UIColor

    fileprivate let rawValue: NativeColor

    private init(_ rawValue: NativeColor) {
        self.rawValue = rawValue
    }

    private convenience init(white: CGFloat, alpha: CGFloat) {
        self.init(
            NativeColor(white: white, alpha: alpha)
        )
    }

    private convenience init(red: CGFloat, green: CGFloat, blue: CGFloat, alpha: CGFloat) {
        self.init(
            NativeColor(red: red, green: green, blue: blue, alpha: alpha)
        )
    }

    private convenience init(light: BaseColor, dark: BaseColor) {
        self.init(
            NativeColor(dynamicProvider: { traits in
                switch traits.userInterfaceStyle {
                case .dark:
                    return dark.rawValue
                default:
                    return light.rawValue
                }
            })
        )
    }

    private convenience init(base: BaseColor, elevated: BaseColor) {
        self.init(
            NativeColor(dynamicProvider: { traits in
                switch traits.userInterfaceLevel {
                case .elevated:
                    return elevated.rawValue
                default:
                    return base.rawValue
                }
            })
        )
    }
}

// MARK: Colors

extension BaseColor {
    static let accent = BaseColor(
        red: 0.0,
        green: 0.7490196078431373,
        blue: 0.7607843137254903,
        alpha: 1.0
    )

    static let warning = BaseColor(
        red: 0.9294117647058824,
        green: 0.2627450980392157,
        blue: 0.2156862745098039,
        alpha: 1.0
    )

    static let textPrimary = BaseColor(
        light: BaseColor(white: 0.0, alpha: 0.95),
        dark: BaseColor(white: 1.0, alpha: 1.0)
    )

    static let textSecondary = BaseColor(
        light: BaseColor(white: 0.0, alpha: 0.4),
        dark: BaseColor(white: 1.0, alpha: 0.6)
    )

    /// The color for the main background of your interface.
    static let primaryBackground = BaseColor(
        light: BaseColor(white: 1.0, alpha: 1.0),
        dark: BaseColor(
            base: BaseColor(white: 0.0509803921568627, alpha: 1.0),
            elevated: BaseColor(
                red: 0.0980392156862745,
                green: 0.1137254901960784,
                blue: 0.1137254901960784,
                alpha: 1.0
            )
        )
    )
}

// MARK: Utils

extension UIColor {
    @inline(__always)
    static func base(_ color: BaseColor) -> UIColor {
        return color.rawValue
    }
}

extension CGColor {
    @inline(__always)
    static func base(_ color: BaseColor) -> CGColor {
        return color.rawValue.cgColor
    }
}
